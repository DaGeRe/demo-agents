const calls = 
{ "nodes" : [
{ "id" : "com.typesafe.scalalogging.Logger",
"type": 4
 },
{ "id" : "com.typesafe.scalalogging.Logger$",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Clock",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Clock$UserTimeClock",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Gauge",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Histogram",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Meter",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.MetricName",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.MetricsRegistry",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.ThreadPools",
"type": 4
 },
{ "id" : "com.yammer.metrics.core.Timer",
"type": 4
 },
{ "id" : "com.yammer.metrics.reporting.JmxReporter",
"type": 4
 },
{ "id" : "com.yammer.metrics.reporting.JmxReporter$Context",
"type": 4
 },
{ "id" : "com.yammer.metrics.stats.EWMA",
"type": 4
 },
{ "id" : "com.yammer.metrics.stats.ExponentiallyDecayingSample",
"type": 4
 },
{ "id" : "com.yammer.metrics.stats.ThreadLocalRandom",
"type": 4
 },
{ "id" : "com.yammer.metrics.stats.ThreadLocalRandom$1",
"type": 4
 },
{ "id" : "de.lancasterleipzig.agents.javassistAgent.CallWritingManager",
"type": 4
 },
{ "id" : "java.lang.Thread",
"type": 4
 },
{ "id" : "java.util.concurrent.DelayQueue",
"type": 4
 },
{ "id" : "java.util.concurrent.ThreadPoolExecutor",
"type": 4
 },
{ "id" : "kafka.cluster.Partition",
"type": 4
 },
{ "id" : "kafka.cluster.Partition$",
"type": 4
 },
{ "id" : "kafka.cluster.Partition$$anon$2",
"type": 4
 },
{ "id" : "kafka.controller.KafkaController$",
"type": 4
 },
{ "id" : "kafka.controller.StateChangeLogger",
"type": 4
 },
{ "id" : "kafka.controller.StateChangeLogger$",
"type": 4
 },
{ "id" : "kafka.coordinator.transaction.TransactionConfig",
"type": 4
 },
{ "id" : "kafka.coordinator.transaction.TransactionCoordinator",
"type": 4
 },
{ "id" : "kafka.coordinator.transaction.TransactionMarkerChannelManager",
"type": 4
 },
{ "id" : "kafka.coordinator.transaction.TransactionStateManager",
"type": 4
 },
{ "id" : "kafka.coordinator.transaction.TxnMarkerQueue",
"type": 4
 },
{ "id" : "kafka.Kafka$",
"type": 4
 },
{ "id" : "kafka.log.Cleaner",
"type": 4
 },
{ "id" : "kafka.log.LogCleaner",
"type": 4
 },
{ "id" : "kafka.log.LogCleaner$",
"type": 4
 },
{ "id" : "kafka.log.LogCleaner$CleanerThread",
"type": 4
 },
{ "id" : "kafka.log.LogCleanerManager",
"type": 4
 },
{ "id" : "kafka.log.LogCleanerManager$",
"type": 4
 },
{ "id" : "kafka.log.UnifiedLog",
"type": 4
 },
{ "id" : "kafka.log.UnifiedLog$",
"type": 4
 },
{ "id" : "kafka.network.Acceptor",
"type": 4
 },
{ "id" : "kafka.network.Processor",
"type": 4
 },
{ "id" : "kafka.network.RequestChannel",
"type": 4
 },
{ "id" : "kafka.network.RequestChannel$",
"type": 4
 },
{ "id" : "kafka.network.RequestChannel$Request",
"type": 4
 },
{ "id" : "kafka.network.RequestChannel$Response",
"type": 4
 },
{ "id" : "kafka.raft.KafkaMetadataLog",
"type": 4
 },
{ "id" : "kafka.raft.KafkaRaftManager",
"type": 4
 },
{ "id" : "kafka.raft.MetadataLogConfig",
"type": 4
 },
{ "id" : "kafka.raft.SegmentPosition",
"type": 4
 },
{ "id" : "kafka.raft.TimingWheelExpirationService",
"type": 4
 },
{ "id" : "kafka.raft.TimingWheelExpirationService$TimerTaskCompletableFuture",
"type": 4
 },
{ "id" : "kafka.server.AbstractFetcherManager",
"type": 4
 },
{ "id" : "kafka.server.AddPartitionsToTxnManager",
"type": 4
 },
{ "id" : "kafka.server.BrokerLifecycleManager",
"type": 4
 },
{ "id" : "kafka.server.BrokerLifecycleManager$BrokerRegistrationResponseEvent",
"type": 4
 },
{ "id" : "kafka.server.BrokerLifecycleManager$BrokerRegistrationResponseHandler",
"type": 4
 },
{ "id" : "kafka.server.BrokerLifecycleManager$CommunicationEvent",
"type": 4
 },
{ "id" : "kafka.server.BrokerLifecycleManager$StartupEvent",
"type": 4
 },
{ "id" : "kafka.server.ClientQuotaManager",
"type": 4
 },
{ "id" : "kafka.server.ClientRequestQuotaManager",
"type": 4
 },
{ "id" : "kafka.server.ControllerApis",
"type": 4
 },
{ "id" : "kafka.server.ControllerRegistrationManager",
"type": 4
 },
{ "id" : "kafka.server.ControllerRegistrationManager$MetadataUpdateEvent",
"type": 4
 },
{ "id" : "kafka.server.ControllerRegistrationManager$RegistrationResponseHandler",
"type": 4
 },
{ "id" : "kafka.server.ControllerRegistrationManager$ShutdownEvent",
"type": 4
 },
{ "id" : "kafka.server.DynamicBrokerConfig",
"type": 4
 },
{ "id" : "kafka.server.DynamicConfig$Broker$",
"type": 4
 },
{ "id" : "kafka.server.FailedPartitions",
"type": 4
 },
{ "id" : "kafka.server.HostedPartition$Online",
"type": 4
 },
{ "id" : "kafka.server.KafkaConfig",
"type": 4
 },
{ "id" : "kafka.server.KafkaRaftServer",
"type": 4
 },
{ "id" : "kafka.server.KafkaRaftServer$",
"type": 4
 },
{ "id" : "kafka.server.KafkaRequestHandler",
"type": 4
 },
{ "id" : "kafka.server.metadata.AclPublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.BrokerMetadataPublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.BrokerMetadataPublisher$",
"type": 4
 },
{ "id" : "kafka.server.metadata.ClientQuotaMetadataManager",
"type": 4
 },
{ "id" : "kafka.server.metadata.DelegationTokenPublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.DynamicClientQuotaPublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.DynamicConfigPublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.KRaftMetadataCache",
"type": 4
 },
{ "id" : "kafka.server.metadata.KRaftMetadataCachePublisher",
"type": 4
 },
{ "id" : "kafka.server.metadata.ScramPublisher",
"type": 4
 },
{ "id" : "kafka.server.MetadataVersionConfigValidator",
"type": 4
 },
{ "id" : "kafka.server.NodeToControllerChannelManagerImpl",
"type": 4
 },
{ "id" : "kafka.server.NodeToControllerQueueItem",
"type": 4
 },
{ "id" : "kafka.server.NodeToControllerRequestThread",
"type": 4
 },
{ "id" : "kafka.server.QuotaFactory$QuotaManagers",
"type": 4
 },
{ "id" : "kafka.server.QuotaTypes$",
"type": 4
 },
{ "id" : "kafka.server.RaftControllerNodeProvider",
"type": 4
 },
{ "id" : "kafka.server.ReplicaManager",
"type": 4
 },
{ "id" : "kafka.server.RequestHandlerHelper",
"type": 4
 },
{ "id" : "kafka.server.SharedServer",
"type": 4
 },
{ "id" : "kafka.utils.CoreUtils$",
"type": 4
 },
{ "id" : "kafka.utils.Pool",
"type": 4
 },
{ "id" : "org.apache.kafka.clients.admin.ConfigEntry$ConfigSource",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ApiVersions",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ClientRequest",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ClientResponse",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ClientUtils",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ClusterConnectionStates",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ConnectionState",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.consumer.AcknowledgeType",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.DefaultHostResolver",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.InFlightRequests",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.ManualMetadataUpdater",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.MetadataRecoveryStrategy",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.NetworkClient",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.NetworkClient$InFlightRequest",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.NetworkClient$State",
"type": 3
 },
{ "id" : "org.apache.kafka.clients.NodeApiVersions",
"type": 3
 },
{ "id" : "org.apache.kafka.common.acl.AclOperation",
"type": 1
 },
{ "id" : "org.apache.kafka.common.compress.NoCompression",
"type": 1
 },
{ "id" : "org.apache.kafka.common.compress.NoCompression$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.AbstractConfig",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.AbstractConfig$RecordingMap",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.AbstractConfig$ResolvingMap",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$CaseInsensitiveValidString",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$Importance",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$LambdaValidator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$NonEmptyString",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$NonNullValidator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$Range",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$Type",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$ValidList",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$ValidString",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigDef$Width",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.ConfigResource$Type",
"type": 1
 },
{ "id" : "org.apache.kafka.common.config.SslClientAuth",
"type": 1
 },
{ "id" : "org.apache.kafka.common.DirectoryId",
"type": 1
 },
{ "id" : "org.apache.kafka.common.Endpoint",
"type": 1
 },
{ "id" : "org.apache.kafka.common.errors.ApiException",
"type": 1
 },
{ "id" : "org.apache.kafka.common.feature.BaseVersionRange",
"type": 1
 },
{ "id" : "org.apache.kafka.common.feature.Features",
"type": 1
 },
{ "id" : "org.apache.kafka.common.feature.SupportedVersionRange",
"type": 1
 },
{ "id" : "org.apache.kafka.common.GroupType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.internals.ClusterResourceListeners",
"type": 1
 },
{ "id" : "org.apache.kafka.common.internals.Topic",
"type": 1
 },
{ "id" : "org.apache.kafka.common.memory.MemoryPool$1",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiMessageType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiMessageType$ListenerType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiVersionsRequestData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiVersionsResponseData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.BrokerRegistrationRequestData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.BrokerRegistrationRequestData$Feature",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.BrokerRegistrationRequestData$ListenerCollection",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.BrokerRegistrationResponseData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ControllerRegistrationRequestData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ControllerRegistrationResponseData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.KRaftVersionRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.LeaderChangeMessage",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.LeaderChangeMessage$Voter",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.RequestHeaderData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.ResponseHeaderData",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.SnapshotFooterRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.SnapshotHeaderRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.VotersRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.VotersRecord$Endpoint",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.VotersRecord$KRaftVersionFeature",
"type": 1
 },
{ "id" : "org.apache.kafka.common.message.VotersRecord$Voter",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.BeginTransactionRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.EndTransactionRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.FeatureLevelRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.MetadataRecordType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.NoOpRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.PartitionChangeRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.PartitionRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterBrokerRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterControllerRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.TopicRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metadata.ZkMigrationStateRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.MetricName",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.CompoundStat$NamedMeasurable",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.internals.IntGaugeSuite",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.internals.IntGaugeSuite$StoredIntGauge",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.internals.MetricsUtils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.JmxReporter",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.KafkaMetric",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.KafkaMetricsContext",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.MetricConfig",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.Metrics",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.Quota",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.Sensor",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.Sensor$RecordingLevel",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.Sensor$StatAndConfig",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Avg",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.CumulativeSum",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Max",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Meter",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Percentile",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Percentiles",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Percentiles$BucketSizing",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.Rate",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.SampledStat",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.SampledStat$Sample",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.WindowedCount",
"type": 1
 },
{ "id" : "org.apache.kafka.common.metrics.stats.WindowedSum",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ByteBufferSend",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ChannelBuilders",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ChannelState",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ChannelState$State",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ClientInformation",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ConnectionMode",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.KafkaChannel",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.KafkaChannel$ChannelMuteEvent",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.KafkaChannel$ChannelMuteState",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ListenerName",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.NetworkReceive",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.NetworkSend",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.PlaintextChannelBuilder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.PlaintextTransportLayer",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.Selector",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.Selector$CloseMode",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.Selector$IdleExpiryManager",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.Selector$SelectorMetrics",
"type": 1
 },
{ "id" : "org.apache.kafka.common.network.ServerConnectionId",
"type": 1
 },
{ "id" : "org.apache.kafka.common.Node",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.ApiKeys",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.ApiKeys$1",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.ByteBufferAccessor",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.DataOutputStreamWritable",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.Errors",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.MessageSizeAccumulator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.MessageUtil",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.ObjectSerializationCache",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.SendBuilder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.ArrayOf",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.CompactArrayOf",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.Field$TaggedFieldsSection",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.Schema",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.Struct",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.TaggedFields",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.Type",
"type": 1
 },
{ "id" : "org.apache.kafka.common.protocol.types.Type$3",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.AbstractRecordBatch",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.AbstractRecords",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.ByteBufferLogInputStream",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.CompressionType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.CompressionType$1",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.CompressionType$2",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.CompressionType$3",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.ControlRecordType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.ControlRecordUtils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.DefaultRecord",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.DefaultRecordBatch",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.DefaultRecordBatch$3",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.FileLogInputStream",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.FileRecords",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.MemoryRecords",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.MemoryRecordsBuilder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.RecordBatchIterator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.RecordVersion",
"type": 1
 },
{ "id" : "org.apache.kafka.common.record.TimestampType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.AbstractRequest",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.AbstractRequest$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.AbstractResponse",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ApiVersionsRequest",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ApiVersionsRequest$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ApiVersionsResponse",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ApiVersionsResponse$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.BrokerRegistrationRequest",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.BrokerRegistrationRequest$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.BrokerRegistrationResponse",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ControllerRegistrationRequest",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ControllerRegistrationRequest$Builder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ControllerRegistrationResponse",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.DescribeConfigsResponse$ConfigSource",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.RequestContext",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.RequestHeader",
"type": 1
 },
{ "id" : "org.apache.kafka.common.requests.ResponseHeader",
"type": 1
 },
{ "id" : "org.apache.kafka.common.resource.ResourceType",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.authenticator.CredentialCache",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.authenticator.SaslClientAuthenticator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.auth.KafkaPrincipal",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.auth.SecurityProtocol",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.JaasContext$Type",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.scram.internals.ScramCredentialUtils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.security.scram.internals.ScramMechanism",
"type": 1
 },
{ "id" : "org.apache.kafka.common.TopicIdPartition",
"type": 1
 },
{ "id" : "org.apache.kafka.common.TopicPartition",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.AbstractIterator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.AbstractIterator$State",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.AppInfoParser",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.BufferSupplier",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ByteBufferInputStream",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ByteBufferOutputStream",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ByteBufferUnmapper",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ByteUtils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Checksums",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Crc32C",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Exit",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ExponentialBackoff",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ImplicitLinkedHashCollection",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Java",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.KafkaThread",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.LogContext",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.LoggingSignalHandler",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.LoggingSignalHandler$1",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Sanitizer",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.SystemTime",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.ThreadUtils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Timer",
"type": 1
 },
{ "id" : "org.apache.kafka.common.utils.Utils",
"type": 1
 },
{ "id" : "org.apache.kafka.common.Uuid",
"type": 1
 },
{ "id" : "org.apache.kafka.controller.AclControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ActivationRecordsGenerator",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokerHeartbeatManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokerHeartbeatManager$BrokerHeartbeatState",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokerHeartbeatTracker",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokerIdAndEpoch",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokersToElrs",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.BrokersToIsrs",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ClientQuotaControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ClusterControlManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ClusterControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ConfigurationControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ControllerRequestContext",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ControllerResult",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ControllerResultAndOffset",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.DelegationTokenControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.errors.ControllerExceptions",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.errors.EventHandlerExceptionInfo",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.FeatureControlManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.FeatureControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.LogReplayTracker",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.LogReplayTracker$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.metrics.ControllerMetadataMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.metrics.ControllerMetadataMetricsPublisher",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.metrics.ControllerMetricsChanges",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.metrics.QuorumControllerMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.OffsetControlManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.OffsetControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PartitionReassignmentReplicas",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PeriodicTask",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PeriodicTaskControlManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PeriodicTaskControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PeriodicTaskControlManager$PeriodicTaskOperation",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.PeriodicTaskFlag",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ProducerIdControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$CompleteActivationEvent",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$ControllerEvent",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$ControllerOperationFlag",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$ControllerWriteEvent",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$PeriodicTaskControlManagerQueueAccessor",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.QuorumFeatures",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ReplicationControlManager",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ReplicationControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.controller.ScramControlManager$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.CoordinatorMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.EventAccumulator",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.KafkaMetricHistogram",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.MultiThreadedEventProcessor",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.common.runtime.MultiThreadedEventProcessor$EventProcessorThread",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.ConsumerGroupMigrationPolicy",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.Group$GroupType",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.GroupConfig$ShareGroupAutoOffsetReset",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.GroupCoordinatorConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.GroupCoordinatorService",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.GroupCoordinatorService$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroup$ConsumerGroupState",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.modern.share.ShareGroup$ShareGroupState",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.transaction.TransactionLogConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.coordinator.transaction.TransactionStateManagerConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.deferred.DeferredEventQueue",
"type": 3
 },
{ "id" : "org.apache.kafka.image.AclsDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.AclsImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ClientQuotasDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ClientQuotasImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ClusterDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ClusterImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ConfigurationsDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ConfigurationsImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.DelegationTokenDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.DelegationTokenImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.FeaturesDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.FeaturesImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.LoaderManifestType",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.LogDeltaManifest",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.LogDeltaManifest$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.MetadataBatchLoader",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.MetadataBatchLoader$TransactionState",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.MetadataLoader",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.MetadataLoader$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.image.loader.SnapshotManifest",
"type": 3
 },
{ "id" : "org.apache.kafka.image.LocalReplicaChanges",
"type": 3
 },
{ "id" : "org.apache.kafka.image.LocalReplicaChanges$PartitionInfo",
"type": 3
 },
{ "id" : "org.apache.kafka.image.MetadataDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.MetadataDelta$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.image.MetadataImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.MetadataProvenance",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ProducerIdsDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ProducerIdsImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.BrokerRegistrationTracker",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.ControllerRegistrationsPublisher",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.metrics.SnapshotEmitterMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.SnapshotEmitter$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.SnapshotGenerator",
"type": 3
 },
{ "id" : "org.apache.kafka.image.publisher.SnapshotGenerator$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ScramDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.ScramImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.TopicDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.TopicImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.TopicsDelta",
"type": 3
 },
{ "id" : "org.apache.kafka.image.TopicsImage",
"type": 3
 },
{ "id" : "org.apache.kafka.image.writer.ImageReWriter",
"type": 3
 },
{ "id" : "org.apache.kafka.image.writer.ImageWriterOptions",
"type": 3
 },
{ "id" : "org.apache.kafka.image.writer.ImageWriterOptions$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.bootstrap.BootstrapDirectory",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.bootstrap.BootstrapMetadata",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.BrokerRegistration",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.BrokerRegistration$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.BrokerRegistrationFencingChange",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.BrokerRegistrationInControlledShutdownChange",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.BrokerState",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.ControllerRegistration",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.ControllerRegistration$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.FinalizedControllerFeatures",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.LeaderRecoveryState",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.ListenerInfo",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.MetadataRecordSerde",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.migration.ZkMigrationState",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.PartitionRegistration",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaProperties",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaProperties$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$1",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$Copier",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$Loader",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$VerificationFlag",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.MetaPropertiesVersion",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.properties.PropertiesUtils",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.publisher.FeaturesPublisher",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.Replicas",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.util.BatchFileReader",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.util.BatchFileReader$BatchAndType",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.util.BatchFileReader$Builder",
"type": 3
 },
{ "id" : "org.apache.kafka.metadata.VersionRange",
"type": 3
 },
{ "id" : "org.apache.kafka.network.ConnectionQuotaEntity",
"type": 3
 },
{ "id" : "org.apache.kafka.network.metrics.RequestChannelMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.network.metrics.RequestMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.network.metrics.RequestMetrics$ErrorMeter",
"type": 3
 },
{ "id" : "org.apache.kafka.network.SocketServerConfigs",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.EventQueue$DeadlineFunction",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.EventQueue$EarliestDeadlineFunction",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.EventQueue$EventInsertionType",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.EventQueue$NoDeadlineFunction",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.KafkaEventQueue",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.KafkaEventQueue$EventContext",
"type": 3
 },
{ "id" : "org.apache.kafka.queue.KafkaEventQueue$EventHandler",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.Batch",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.CandidateState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.CandidateState$State",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.CandidateState$VoterState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.ControlRecord",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.ElectionState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.Endpoints",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.FileQuorumStateStore",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.generated.QuorumStateData",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.generated.QuorumStateDataJsonConverter",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.AddVoterHandler",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchAccumulator",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchAccumulator$DrainStatus",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchBuilder",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BatchMemoryPool",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.BlockingMessageQueue",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.KafkaRaftMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.LogHistory$Entry",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.MemoryBatchReader",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.RecordsBatchReader",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.RecordsIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.RemoveVoterHandler",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.ThresholdPurgatory",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.ThresholdPurgatory$ThresholdKey",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.TimeRatio",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.TreeMapLogHistory",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.internals.VoterSetHistory",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.Isolation",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaNetworkChannel",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaNetworkChannel$SendThread",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient$GracefulShutdown",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient$ListenerContext",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient$RaftMetadataLogCleanerManager",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient$Registration",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClient$Registration$Ops",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.KafkaRaftClientDriver",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.LeaderAndEpoch",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.LeaderState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.LeaderState$ReplicaState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.LogOffsetMetadata",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.OffsetAndEpoch",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.QuorumConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.QuorumConfig$ControllerQuorumBootstrapServersValidator",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.QuorumConfig$ControllerQuorumVotersValidator",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.QuorumState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.ReplicaKey",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.RequestManager",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.ResignedState",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.VoterSet",
"type": 3
 },
{ "id" : "org.apache.kafka.raft.VoterSet$VoterNode",
"type": 3
 },
{ "id" : "org.apache.kafka.server.AssignmentsManager",
"type": 2
 },
{ "id" : "org.apache.kafka.server.BrokerFeatures",
"type": 2
 },
{ "id" : "org.apache.kafka.server.ClientMetricsManager",
"type": 2
 },
{ "id" : "org.apache.kafka.server.ClientMetricsManager$ClientMetricsStats",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.ApiMessageAndVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.CheckpointFile",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.CheckpointFile$CheckpointReadBuffer",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.CheckpointFile$CheckpointWriteBuffer",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.EligibleLeaderReplicasVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.Feature",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.FinalizedFeatures",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.GroupVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.KRaftVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.MetadataVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.MetadataVersionValidator",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.RequestLocal",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.TestFeatureVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.TopicIdPartition",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.TransactionVersion",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV0",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV1",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV2",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV3",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV4",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV5",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV6",
"type": 2
 },
{ "id" : "org.apache.kafka.server.common.UnitTestFeatureVersion$FV7",
"type": 2
 },
{ "id" : "org.apache.kafka.server.config.ConfigSynonym",
"type": 2
 },
{ "id" : "org.apache.kafka.server.config.QuotaConfig",
"type": 2
 },
{ "id" : "org.apache.kafka.server.config.ServerTopicConfigSynonyms",
"type": 2
 },
{ "id" : "org.apache.kafka.server.config.ShareCoordinatorConfig",
"type": 2
 },
{ "id" : "org.apache.kafka.server.config.ZkConfigs",
"type": 2
 },
{ "id" : "org.apache.kafka.server.fault.ProcessTerminatingFaultHandler$Builder",
"type": 2
 },
{ "id" : "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap",
"type": 2
 },
{ "id" : "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot",
"type": 2
 },
{ "id" : "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig",
"type": 2
 },
{ "id" : "org.apache.kafka.server.log.remote.storage.RemoteStorageMetrics",
"type": 2
 },
{ "id" : "org.apache.kafka.server.metrics.BrokerServerMetrics",
"type": 2
 },
{ "id" : "org.apache.kafka.server.metrics.FilteringJmxReporter",
"type": 2
 },
{ "id" : "org.apache.kafka.server.metrics.KafkaMetricsGroup",
"type": 2
 },
{ "id" : "org.apache.kafka.server.metrics.KafkaYammerMetrics",
"type": 2
 },
{ "id" : "org.apache.kafka.server.metrics.LinuxIoMetricsCollector",
"type": 2
 },
{ "id" : "org.apache.kafka.server.network.EndpointReadyFutures",
"type": 2
 },
{ "id" : "org.apache.kafka.server.network.EndpointReadyFutures$Builder",
"type": 2
 },
{ "id" : "org.apache.kafka.server.network.EndpointReadyFutures$EndpointReadyFuture",
"type": 2
 },
{ "id" : "org.apache.kafka.server.network.KafkaAuthorizerServerInfo",
"type": 2
 },
{ "id" : "org.apache.kafka.server.ProcessRole",
"type": 2
 },
{ "id" : "org.apache.kafka.server.purgatory.DelayedOperationPurgatory",
"type": 2
 },
{ "id" : "org.apache.kafka.server.purgatory.DelayedOperationPurgatory$ExpiredOperationReaper",
"type": 2
 },
{ "id" : "org.apache.kafka.server.purgatory.TopicPartitionOperationKey",
"type": 2
 },
{ "id" : "org.apache.kafka.server.quota.ClientQuotaType",
"type": 2
 },
{ "id" : "org.apache.kafka.server.quota.QuotaType",
"type": 2
 },
{ "id" : "org.apache.kafka.server.quota.SensorAccess",
"type": 2
 },
{ "id" : "org.apache.kafka.server.quota.ThrottledChannel",
"type": 2
 },
{ "id" : "org.apache.kafka.server.record.BrokerCompressionType",
"type": 2
 },
{ "id" : "org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory",
"type": 2
 },
{ "id" : "org.apache.kafka.server.share.fetch.DelayedShareFetchPartitionKey",
"type": 2
 },
{ "id" : "org.apache.kafka.server.storage.log.FetchIsolation",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.Csv",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.Deadline",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.FileLock",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.FutureUtils",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.InterBrokerSendThread",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.Json",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.KafkaScheduler",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.ShutdownableThread",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.SystemTimer",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.TimerTask",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.TimerTaskEntry",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.TimerTaskList",
"type": 2
 },
{ "id" : "org.apache.kafka.server.util.timer.TimingWheel",
"type": 2
 },
{ "id" : "org.apache.kafka.snapshot.FileRawSnapshotReader",
"type": 3
 },
{ "id" : "org.apache.kafka.snapshot.RecordsSnapshotReader",
"type": 3
 },
{ "id" : "org.apache.kafka.snapshot.Snapshots",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.CleanShutdownFileHandler",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.LazyOffsetCheckpoints",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.LazyOffsetCheckpoints$LazyOffsetCheckpointMap",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile$Formatter",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile$Formatter",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.PartitionMetadata",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataFile",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataReadBuffer",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.AbstractIndex",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.AbstractIndex$SearchResultType",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.AppendOrigin",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.CleanerConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.IndexSearchType",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LazyIndex",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LazyIndex$IndexFile",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LazyIndex$IndexType",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LazyIndex$IndexValue",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LeaderHwChange",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LocalLog",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogAppendInfo",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogConfig",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogConfig$MessageFormatVersion",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogDirFailureChannel",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogFileUtils",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogLoader",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogOffsetMetadata",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogSegment",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogSegment$1",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.LogSegments",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.OffsetIndex",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.OffsetPosition",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.ProducerStateManager",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.SkimpyOffsetMap",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.SnapshotFile",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.ThrottledReplicaListValidator",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.TimeIndex",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.TransactionIndex",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.internals.log.UnifiedLog",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.log.metrics.BrokerTopicMetrics",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.log.metrics.BrokerTopicMetrics$MeterWrapper",
"type": 3
 },
{ "id" : "org.apache.kafka.storage.log.metrics.BrokerTopicStats",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.BaseHashTable",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.Snapshot",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.SnapshotRegistry",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.SnapshotRegistry$ReverseSnapshotIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.SnapshotRegistry$SnapshotIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.SnapshottableHashTable",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.SnapshottableHashTable$CurrentIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap$EntryIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap$EntrySet",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap$TimelineHashMapEntry",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap$ValueIterator",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashMap$Values",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashSet",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineHashSet$TimelineHashSetEntry",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineLong",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineObject",
"type": 3
 },
{ "id" : "org.apache.kafka.timeline.TimelineObject$ObjectContainer",
"type": 3
 },
{ "id" : "org.apache.log4j.AppenderSkeleton",
"type": 4
 },
{ "id" : "org.apache.log4j.Category",
"type": 4
 },
{ "id" : "org.apache.log4j.CategoryKey",
"type": 4
 },
{ "id" : "org.apache.log4j.DailyRollingFileAppender",
"type": 4
 },
{ "id" : "org.apache.log4j.DefaultCategoryFactory",
"type": 4
 },
{ "id" : "org.apache.log4j.DefaultThrowableRenderer",
"type": 4
 },
{ "id" : "org.apache.log4j.FileAppender",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.AppenderAttachableImpl",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.COWArrayList",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.ISO8601DateFormat",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.LogLog",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternParser$BasicPatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternParser$DatePatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.PatternParser$NamedPatternConverter",
"type": 4
 },
{ "id" : "org.apache.log4j.helpers.QuietWriter",
"type": 4
 },
{ "id" : "org.apache.log4j.Hierarchy",
"type": 4
 },
{ "id" : "org.apache.log4j.Layout",
"type": 4
 },
{ "id" : "org.apache.log4j.Logger",
"type": 4
 },
{ "id" : "org.apache.log4j.LogManager",
"type": 4
 },
{ "id" : "org.apache.log4j.PatternLayout",
"type": 4
 },
{ "id" : "org.apache.log4j.Priority",
"type": 4
 },
{ "id" : "org.apache.log4j.RollingCalendar",
"type": 4
 },
{ "id" : "org.apache.log4j.spi.DefaultRepositorySelector",
"type": 4
 },
{ "id" : "org.apache.log4j.spi.LoggingEvent",
"type": 4
 },
{ "id" : "org.apache.log4j.spi.ThrowableInformation",
"type": 4
 },
{ "id" : "org.apache.log4j.WriterAppender",
"type": 4
 },
{ "id" : "org.pcollections.ConsPStack",
"type": 4
 },
{ "id" : "org.pcollections.ConsPStack$1",
"type": 4
 },
{ "id" : "org.pcollections.HashPMap",
"type": 4
 },
{ "id" : "org.pcollections.HashPMap$1",
"type": 4
 },
{ "id" : "org.pcollections.HashPMap$SequenceIterator",
"type": 4
 },
{ "id" : "org.pcollections.IntTree",
"type": 4
 },
{ "id" : "org.pcollections.IntTree$EntryIterator",
"type": 4
 },
{ "id" : "org.pcollections.IntTreePMap",
"type": 4
 },
{ "id" : "org.pcollections.IntTreePMap$1",
"type": 4
 },
{ "id" : "org.slf4j.helpers.FormattingTuple",
"type": 4
 },
{ "id" : "org.slf4j.helpers.MessageFormatter",
"type": 4
 },
{ "id" : "org.slf4j.impl.Reload4jLoggerAdapter",
"type": 4
 },
{ "id" : "org.slf4j.impl.Reload4jLoggerFactory",
"type": 4
 },
{ "id" : "org.slf4j.impl.StaticLoggerBinder",
"type": 4
 },
{ "id" : "org.slf4j.LoggerFactory",
"type": 4
 },
{ "id" : "scala.$less$colon$less$",
"type": 4
 },
{ "id" : "scala.$less$colon$less$$anon$1",
"type": 4
 },
{ "id" : "scala.Array$",
"type": 4
 },
{ "id" : "scala.jdk.CollectionConverters$",
"type": 4
 },
{ "id" : "scala.jdk.OptionConverters$",
"type": 4
 },
{ "id" : "scala.jdk.OptionConverters$RichOption$",
"type": 4
 },
{ "id" : "scala.jdk.OptionConverters$RichOptional$",
"type": 4
 },
{ "id" : "scala.jdk.OptionConverters$RichOptionalInt$",
"type": 4
 },
{ "id" : "scala.LowPriorityImplicits",
"type": 4
 },
{ "id" : "scala.reflect.ClassTag$",
"type": 4
 },
{ "id" : "scala.reflect.ClassTag$cache$",
"type": 4
 },
{ "id" : "scala.reflect.ClassTag$GenericClassTag",
"type": 4
 },
{ "id" : "scala.reflect.ManifestFactory$ObjectManifest",
"type": 4
 },
{ "id" : "scala.Some",
"type": 4
 },
{ "id" : "scala.Tuple2",
"type": 4
 },
{ "id" : "scala.Tuple3",
"type": 4
 },
{ "id" : "sun.misc.Signal$InternalMiscHandler",
"type": 4
 },
{}
]
, "links": [
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$LambdaValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Type"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Importance"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Width"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Type"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$NonEmptyString"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Range"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$LambdaValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$Range"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ZkConfigs"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.clients.MetadataRecoveryStrategy"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ServerTopicConfigSynonyms"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ServerTopicConfigSynonyms"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ConfigSynonym"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ServerTopicConfigSynonyms"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ServerTopicConfigSynonyms"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$NonNullValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.record.BrokerCompressionType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$ValidList"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$ValidString"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersionValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$ValidString"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.record.BrokerCompressionType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.CompressionType$1"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.CompressionType$2"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.CompressionType$3"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.storage.internals.log.ThrottledReplicaListValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.Group$GroupType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.ConsumerGroupMigrationPolicy"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.Group$GroupType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef$CaseInsensitiveValidString"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig$ControllerQuorumVotersValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig$ControllerQuorumBootstrapServersValidator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.SslClientAuth"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig$ResolvingMap"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.ProcessRole"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.ConsumerGroupMigrationPolicy"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.GroupType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.config.ShareCoordinatorConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.util.Csv"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.util.Csv"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.Endpoint"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.Group$GroupType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.storage.internals.log.LogConfig$MessageFormatVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.RecordVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.clients.admin.ConfigEntry$ConfigSource"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.requests.DescribeConfigsResponse$ConfigSource"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.ConfigResource$Type"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$Loader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.PropertiesUtils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.PropertiesUtils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaProperties$Builder"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$VerificationFlag"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.DirectoryId"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.TopicPartition"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$1"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaProperties$Builder"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$Copier"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble$Copier"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.bootstrap.BootstrapDirectory"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader$Builder"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator$State"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator$State"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.RecordBatchIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.AbstractRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.TimestampType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$3"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$3"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.ControlRecordType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.protocol.types.Field$TaggedFieldsSection"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.protocol.types.TaggedFields"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.message.SnapshotHeaderRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader$BatchAndType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.MetadataRecordSerde"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader$BatchAndType"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.message.SnapshotFooterRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.util.BatchFileReader"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.bootstrap.BootstrapMetadata"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.ApiMessageAndVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.bootstrap.BootstrapMetadata"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.KafkaMetricsContext"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.Exit"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig$RecordingMap"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.LogContext"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.LinuxIoMetricsCollector"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.metrics.LinuxIoMetricsCollector"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.TransactionVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.GroupVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.EligibleLeaderReplicasVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.TestFeatureVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV0"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV1"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV2"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV3"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV4"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV5"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV6"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.UnitTestFeatureVersion$FV7"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.TestFeatureVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.TestFeatureVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.TransactionVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.GroupVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.EligibleLeaderReplicasVersion"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.Kafka$","target": "org.apache.kafka.common.feature.Features"},
{"source": "org.apache.kafka.common.utils.Java","target": "org.apache.kafka.common.utils.Java"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.slf4j.LoggerFactory"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.slf4j.impl.StaticLoggerBinder"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.slf4j.impl.Reload4jLoggerFactory"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.LogManager"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.spi.DefaultRepositorySelector"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.DefaultCategoryFactory"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.kafka.common.utils.LoggingSignalHandler"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.AppenderAttachableImpl"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternParser$DatePatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.ISO8601DateFormat"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternParser$BasicPatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternParser$NamedPatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.common.utils.LoggingSignalHandler","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "org.apache.kafka.common.utils.Exit","target": "org.apache.kafka.common.utils.Exit"},
{"source": "org.apache.kafka.common.utils.Exit","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.Deadline"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig$ResolvingMap"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$NonEmptyString"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$Range"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$LambdaValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$NonNullValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$ValidString"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.CompressionType$1"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$ValidList"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersionValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$CaseInsensitiveValidString"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig$ControllerQuorumVotersValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig$ControllerQuorumBootstrapServersValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.ConsumerGroupMigrationPolicy"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.ShareCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.Csv"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.Csv"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.SocketServerConfigs"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Endpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.Group$GroupType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig$MessageFormatVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.RecordVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.LinuxIoMetricsCollector"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.LinuxIoMetricsCollector"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.migration.ZkMigrationState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.FinalizedFeatures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType$ListenerType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Field$TaggedFieldsSection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.TaggedFields"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType$ListenerType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.ArrayOf"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.CompactArrayOf"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Schema"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Type"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys$1"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.ArrayOf"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.CompactArrayOf"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.TransactionVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.GroupVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.EligibleLeaderReplicasVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.Features"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.scram.internals.ScramMechanism"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.scram.internals.ScramCredentialUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.authenticator.CredentialCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.CompoundStat$NamedMeasurable"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.errors.ApiException"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.ConnectionQuotaEntity"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.QuotaConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.QuotaConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.ConnectionQuotaEntity"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.ConnectionQuotaEntity"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.QuotaConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$Range"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig$RecordingMap"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ChannelBuilders"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ConnectionMode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.JaasContext$Type"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ChannelBuilders"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.PlaintextChannelBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.EndpointReadyFutures$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.KafkaAuthorizerServerInfo"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Endpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.EndpointReadyFutures$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.EndpointReadyFutures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.EndpointReadyFutures$EndpointReadyFuture"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.fault.ProcessTerminatingFaultHandler$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.TopicPartition"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ThrottledReplicaListValidator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.record.BrokerCompressionType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.record.BrokerCompressionType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.TimestampType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.log.metrics.BrokerTopicMetrics$MeterWrapper"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.TopicPartition"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointReadBuffer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile$Formatter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex$IndexType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex$IndexFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.SnapshotFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex$IndexType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.RecordBatchIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Crc32C"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Checksums"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.AbstractRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.SnapshotFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageUtil"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.IndexSearchType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex$SearchResultType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.IndexSearchType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex$SearchResultType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetPosition"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.AbstractRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.AbstractRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointWriteBuffer"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile$Formatter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.SnapshotFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.log.metrics.BrokerTopicStats"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataReadBuffer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadata"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.Snapshots"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.ChannelBuilders"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.clients.NetworkClient$State"},
{"source": "java.lang.Thread","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.AppenderAttachableImpl"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternParser$DatePatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.ISO8601DateFormat"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternParser$BasicPatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternParser$NamedPatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "org.apache.kafka.server.util.ShutdownableThread","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "org.apache.kafka.server.util.timer.SystemTimer","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.Feature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Timer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Node"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.BufferSupplier"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.FileRawSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.Snapshots"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.FileRawSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ByteBufferLogInputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ByteBufferLogInputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.compress.NoCompression$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferInputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.SnapshotHeaderRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.KRaftVersionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$KRaftVersionFeature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ControlRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.SnapshotHeaderRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.KRaftVersionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.VotersRecord$KRaftVersionFeature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.SnapshotFooterRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LogOffsetMetadata"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Isolation"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.storage.log.FetchIsolation"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogDirFailureChannel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogOffsetMetadata"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.LogHistory$Entry"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.MetadataRecordSerde"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.BeginTransactionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.ZkMigrationStateRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.EndTransactionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.NoOpRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.TopicRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metadata.PartitionChangeRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.LogHistory$Entry"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.FileQuorumStateStore"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.generated.QuorumStateDataJsonConverter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageUtil"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.generated.QuorumStateData"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ResignedState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.FileQuorumStateStore"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.generated.QuorumStateData"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.FileQuorumStateStore"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.generated.QuorumStateDataJsonConverter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ResignedState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState$State"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState$VoterState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState$VoterState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator$DrainStatus"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.CandidateState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointWriteBuffer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile$Formatter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchMemoryPool"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.AbstractRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageUtil"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.ControlRecordType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Schema"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Struct"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Schema"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Struct"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Schema"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Struct"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Type$3"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Struct"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Schema"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.Type$3"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecordsBuilder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.AbstractRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.RequestManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaNetworkChannel"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.raft.KafkaNetworkChannel$SendThread"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.raft.KafkaRaftClientDriver"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.server.util.ShutdownableThread","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.raft.KafkaRaftClientDriver"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ManualMetadataUpdater"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.BrokerServerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AppendOrigin"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.common.RequestLocal"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaProperties"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataLoader$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.Some"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataLoader$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.Some"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataFile"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog$"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataLoader$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.RecordBatchIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.ByteBufferLogInputStream"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Crc32C"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Checksums"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LeaderHwChange"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogAppendInfo"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogDirFailureChannel"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogAppendInfo"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogAppendInfo"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileLogInputStream"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.MetadataDelta$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.MetadataDelta$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataBatchLoader$TransactionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.MetadataImage"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.MetadataProvenance"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.AbstractRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.Tuple3"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogAppendInfo"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Logger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$RichOptional$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotEmitter$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.LoggerFactory"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.impl.StaticLoggerBinder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.impl.Reload4jLoggerFactory"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.LogManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.spi.DefaultRepositorySelector"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.DefaultCategoryFactory"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.typesafe.scalalogging.Logger$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.typesafe.scalalogging.Logger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogAppendInfo"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LogOffsetMetadata"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.MetadataLogConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogOffsetMetadata"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.OffsetPosition"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.metrics.SnapshotEmitterMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.metrics.SnapshotEmitterMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotEmitter$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch$DefaultFileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.compress.NoCompression$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ByteBufferInputStream"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.ControlRecordType"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ControlRecord"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.Batch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$RichOptionalInt$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.ThresholdPurgatory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.TimingWheelExpirationService"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.TimingWheelExpirationService$TimerTaskCompletableFuture"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.EventQueue$EventInsertionType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.EventQueue$EventInsertionType"},
{"source": "org.apache.kafka.server.util.timer.SystemTimer","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.ThresholdPurgatory$ThresholdKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.server.util.timer.SystemTimer","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.util.timer.SystemTimer","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.EventQueue$EarliestDeadlineFunction"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataProvenance"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.SharedServer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchMemoryPool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.raft.KafkaRaftManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient$Registration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.LogHistory$Entry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.FormattingTuple"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.helpers.FormattingTuple"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient$Registration$Ops"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BlockingMessageQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.AppenderAttachableImpl"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternConverter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternParser$DatePatternConverter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.ISO8601DateFormat"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternParser$BasicPatternConverter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternParser$NamedPatternConverter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.Endpoints"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.FutureUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LogOffsetMetadata"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.Deadline"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.SegmentPosition"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState$ReplicaState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.Uuid"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumConfig"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.helpers.FormattingTuple"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.AppenderAttachableImpl"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternParser$DatePatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.ISO8601DateFormat"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternParser$BasicPatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternParser$NamedPatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumFeatures"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LogOffsetMetadata"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.AddVoterHandler"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RemoveVoterHandler"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.ThresholdPurgatory"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.Avg"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metrics.stats.Max"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.ThresholdPurgatory"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.TimingWheelExpirationService"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Timer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Clock$UserTimeClock"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LogSegment$1"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Timer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Clock"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ThreadLocalRandom"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ThreadLocalRandom$1"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ThreadLocalRandom"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Meter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.stats.EWMA"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Timer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Timer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$RaftMetadataLogCleanerManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.Timer"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BlockingMessageQueue"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.TimeRatio"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$Registration"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.Tuple2"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.jdk.OptionConverters$RichOption$"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "scala.$less$colon$less$$anon$1"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.BufferSupplier"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.snapshot.FileRawSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.Snapshots"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "kafka.log.UnifiedLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ByteBufferLogInputStream"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.MemoryRecords"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.RecordBatchIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ByteBufferLogInputStream"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Crc32C"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Checksums"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.CompressionType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.compress.NoCompression$Builder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteBufferInputStream"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.SnapshotHeaderRecord"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ElectionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ElectionState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.KRaftVersionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$Voter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.VotersRecord$KRaftVersionFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.ControlRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.SnapshotHeaderRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.SnapshotFooterRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree$EntryIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap$SequenceIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree$EntryIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClientQuotasDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClientQuotasImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ProducerIdsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.AclsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.AclsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ScramDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ScramImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.DelegationTokenDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.DelegationTokenImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.SnapshotManifest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClientQuotasDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ProducerIdsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.AclsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ScramDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.DelegationTokenDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataProvenance"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.SnapshotManifest"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ConfigurationControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LoaderManifestType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ConfigurationControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LogOffsetMetadata"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.snapshot.RecordsSnapshotReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.ControlRecordUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderChangeMessage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderChangeMessage$Voter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.SharedServer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.BrokerServerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Clock"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Clock$UserTimeClock"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ThreadLocalRandom"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ThreadLocalRandom$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ThreadLocalRandom"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.ExponentiallyDecayingSample"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.SharedServer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.BrokerServerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.MetadataRecordSerde"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BeginTransactionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.ZkMigrationStateRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.EndTransactionRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.ApiMessageAndVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BeginTransactionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader$TransactionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LogDeltaManifest"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ClientQuotaControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LogDeltaManifest$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LogDeltaManifest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.ZkMigrationStateRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.migration.ZkMigrationState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.EndTransactionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.PeriodicTaskControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.FeatureControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ClusterControlManager$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ProducerIdControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ReplicationControlManager$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistrationFencingChange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistrationInControlledShutdownChange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistrationFencingChange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistrationInControlledShutdownChange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.NoOpRecord"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.ScramControlManager$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.DelegationTokenControlManager$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.AclControlManager$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.LogReplayTracker$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.LogReplayTracker"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.PeriodicTaskFlag"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.PeriodicTaskControlManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.PeriodicTask"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.PeriodicTaskControlManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController$PeriodicTaskControlManagerQueueAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.OffsetControlManager$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry$SnapshotIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry$SnapshotIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable$CurrentIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineObject"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry$ReverseSnapshotIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineLong"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.quota.QuotaType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.quota.QuotaType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.quota.ClientQuotaType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.quota.QuotaType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Logger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.LogReplayTracker"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.config.ConfigResource$Type"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BeginTransactionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.FeatureControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumFeatures"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry$ReverseSnapshotIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.Snapshot"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineObject$ObjectContainer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$TimelineHashMapEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$TimelineHashMapEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineObject"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.EndTransactionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.quota.SensorAccess"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.TopicRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.TopicRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.QuotaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.TopicRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.config.QuotaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.Replicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.LeaderRecoveryState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.MessageUtil"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$TimelineHashMapEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.BrokerRegistrationChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory$ExpiredOperationReaper"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.RequestLocal"},
{"source": "org.apache.kafka.common.utils.SystemTime","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.internals.Topic"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshotRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokersToIsrs"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.Replicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokersToIsrs"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokersToElrs"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.DirectoryId"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet$TimelineHashSetEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.TopicIdPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet$TimelineHashSetEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PartitionReassignmentReplicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.Replicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.WindowedCount"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.Avg"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.LeaderRecoveryState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionChangeRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.Replicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokersToIsrs"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet$TimelineHashSetEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.TopicIdPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet$TimelineHashSetEntry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokersToIsrs"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.Replicas"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTreePMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataBatchLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient$ListenerContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BlockingMessageQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.writer.ImageWriterOptions$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.writer.ImageWriterOptions$Builder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.writer.ImageWriterOptions"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.FeaturesImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.FeatureLevelRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.writer.ImageReWriter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.migration.ZkMigrationState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.ZkMigrationStateRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Endpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.VersionRange"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterBrokerRecord$BrokerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ControllerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap$SequenceIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree$EntryIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.ConsPStack"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.IntTree"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.TopicRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.PartitionRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClientQuotasImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ProducerIdsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.AclsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ScramImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.DelegationTokenImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.writer.ImageReWriter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LoaderManifestType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataProvenance"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCachePublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.publisher.FeaturesPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.ControllerRegistrationsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicClientQuotaPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ScramPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DelegationTokenPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetricsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.AclPublisher"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.network.EndpointReadyFutures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.ServerSocketFactory$KafkaServerSocketFactory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCachePublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCachePublisher"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.publisher.FeaturesPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.FinalizedFeatures"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.ControllerRegistrationsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.FutureUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager$MetadataUpdateEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.LoggerFactory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.StaticLoggerBinder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerFactory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.LogManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.DefaultRepositorySelector"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.DefaultCategoryFactory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.typesafe.scalalogging.Logger$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.typesafe.scalalogging.Logger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager$MetadataUpdateEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.Some"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicClientQuotaPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicClientQuotaPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ClientQuotaMetadataManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClientQuotasDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicClientQuotaPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ScramPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ScramPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ScramDelta"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ScramPublisher"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DelegationTokenPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DelegationTokenPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.DelegationTokenDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DelegationTokenPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetricsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.BrokerRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.AclPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.AclPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.metrics.MetadataLoaderMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.QuorumState"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.LeaderState"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.ElectionState"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.internals.VoterSetHistory"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.internals.LogHistory$Entry"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.VoterSet"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.Endpoints"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.server.RaftControllerNodeProvider","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "kafka.server.NodeToControllerRequestThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.Tuple2"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.clients.ManualMetadataUpdater","target": "org.apache.kafka.clients.ManualMetadataUpdater"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.NodeToControllerChannelManagerImpl"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerQueueItem"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "scala.Some"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerQueueItem"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.security.authenticator.SaslClientAuthenticator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread$UnsentRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ManualMetadataUpdater"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ConnectionState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ExponentialBackoff"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.LoggerFactory"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.StaticLoggerBinder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerFactory"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.LogManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.spi.DefaultRepositorySelector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.DefaultCategoryFactory"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.CategoryKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientUtils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.DefaultHostResolver"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientUtils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Node"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextChannelBuilder"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextChannelBuilder"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.internals.MetricsUtils"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.metrics.Quota"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextChannelBuilder"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ChannelBuilders"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.config.AbstractConfig$RecordingMap"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.WindowedCount"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Avg"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel$ChannelMuteState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ChannelState$State"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ServerConnectionId"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.AppInfoParser"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ApiVersions"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Logger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsRequest$Builder"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextChannelBuilder"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ChannelBuilders"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.config.AbstractConfig$RecordingMap"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaPropertiesEnsemble"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.storage.RemoteLogManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.transaction.TransactionStateManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.transaction.TransactionLogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.FileLock"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.PropertiesUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaPropertiesVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.PropertiesUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.properties.MetaProperties$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.BrokerState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.types.Field$TaggedFieldsSection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.types.TaggedFields"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient$InFlightRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ConnectionState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.metrics.stats.Max"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.security.auth.KafkaPrincipal"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.stats.Percentiles$BucketSizing"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.stats.Percentiles"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.stats.Percentile"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.ApiVersionsRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.ApiVersionsRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.ApiVersionsRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite$StoredIntGauge"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel$ChannelMuteEvent"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel$ChannelMuteEvent"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsRequest"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.RecordsBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.metadata.publisher.FeaturesPublisher"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse$Builder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.common.FinalizedFeatures"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse$Builder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.common.FinalizedFeatures"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse$Builder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.feature.Features"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.feature.SupportedVersionRange"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.feature.BaseVersionRange"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.AbstractResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.network.metrics.RequestChannelMetrics"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.network.metrics.RequestMetrics$ErrorMeter"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.ClientMetricsManager$ClientMetricsStats"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.types.Field$TaggedFieldsSection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.types.TaggedFields"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.AbstractResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ResponseHeader"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.ClientMetricsManager"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.memory.MemoryPool$1"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.stats.Max"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkSend"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ResponseHeader"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ResponseHeader"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.network.metrics.RequestChannelMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$SupportedFeatureKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$FinalizedFeatureKey"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ApiVersions"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NodeApiVersions"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.AbstractRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NodeApiVersions"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ApiVersionsResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ApiVersionsResponseData$ApiVersion"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.acl.AclOperation"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.resource.ResourceType"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.ControllerRequestContext"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.QuorumController$ControllerOperationFlag"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.QuorumController$ControllerWriteEvent"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.AssignmentsManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupConfig$ShareGroupAutoOffsetReset"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupConfig$ShareGroupAutoOffsetReset"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.ConfigDef$ValidString"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorService$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.internals.MetricsUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.KafkaMetricHistogram"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.KafkaMetricHistogram"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorService$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.Group$GroupType"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.consumer.ConsumerGroup$ConsumerGroupState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroup$ShareGroupState"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.metrics.GroupCoordinatorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorService$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.MultiThreadedEventProcessor"},
{"source": "java.lang.Thread","target": "org.apache.kafka.coordinator.common.runtime.MultiThreadedEventProcessor$EventProcessorThread"},
{"source": "de.lancasterleipzig.agents.javassistAgent.CallWritingManager","target": "org.apache.kafka.coordinator.common.runtime.MultiThreadedEventProcessor$EventProcessorThread"},
{"source": "org.apache.kafka.common.utils.SystemTime","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.coordinator.common.runtime.EventAccumulator","target": "org.apache.kafka.coordinator.common.runtime.EventAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime$Builder"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.transaction.TransactionStateManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.transaction.TransactionLogConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.transaction.TransactionStateManagerConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.Node"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.feature.Features"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.BrokerFeatures"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.CleanShutdownFileHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.Json"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerWriteEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.ElectionState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.errors.ControllerExceptions"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.errors.ApiException"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerWriteEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.errors.EventHandlerExceptionInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.errors.EventHandlerExceptionInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.AbstractRequest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.RequestHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager$StartupEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.NodeToControllerChannelManagerImpl"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$ListenerCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.EventQueue$DeadlineFunction"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.security.auth.KafkaPrincipal"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.spi.ThrowableInformation"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.$less$colon$less$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.$less$colon$less$$anon$1"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.DefaultThrowableRenderer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager$StartupEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.RequestHandlerHelper"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.QuotaFactory$QuotaManagers"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ClientRequestQuotaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ClientQuotaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.QuotaTypes$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.RequestHandlerHelper"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ClientQuotaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.RequestHandlerHelper"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ClassTag$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ClassTag$cache$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ClassTag$GenericClassTag"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.ControllerRegistrationRequest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.network.metrics.RequestChannelMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.network.metrics.RequestMetrics$ErrorMeter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.ThreadPools"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.EWMA"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Meter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter$Context"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Meter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.stats.EWMA"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ApiKeys"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ApiMessageType"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.RequestContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.AbstractResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.ResponseHeader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ResponseHeaderData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.ObjectSerializationCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ByteBufferSend"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Response"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Response"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.RequestChannel$Request"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.network.Processor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$QuorumMetaLogListener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.raft.KafkaMetadataLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient$InFlightRequest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$Values"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "com.typesafe.scalalogging.Logger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$ValueIterator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.TimelineHashMap$ValueIterator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.timeline.SnapshottableHashTable$CurrentIterator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClientResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.ControllerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.protocol.Errors"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager$BrokerHeartbeatState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.helpers.MessageFormatter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.helpers.FormattingTuple"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.AppenderAttachableImpl"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.AppenderSkeleton"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternParser$LiteralPatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternParser$DatePatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.ISO8601DateFormat"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternParser$BasicPatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Priority"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternParser$NamedPatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.PatternParser$CategoryPatternConverter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.PatternLayout"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatTracker"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.spi.LoggingEvent"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerIdAndEpoch"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$CompleteActivationEvent"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$CloseMode"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.LogReplayTracker"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.FeatureControlManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ChannelState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ActivationRecordsGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.InFlightRequests"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite$StoredIntGauge"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ControllerResult"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$CompleteActivationEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTaskControlManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ConnectionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTask"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTaskControlManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerRequestThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTask"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ServerConnectionId"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$PeriodicTaskControlManagerQueueAccessor"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.deferred.DeferredEventQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ControllerResultAndOffset"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ControllerResult"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerWriteEvent"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.clients.consumer.AcknowledgeType"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationRequest$Builder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationRequest"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Feature"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.requests.BrokerRegistrationRequest"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Listener"},
{"source": "kafka.network.Processor","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData$Feature"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.common.requests.BrokerRegistrationRequest"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.controller.FeatureControlManager"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineObject"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineHashMap"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineHashMap$EntrySet"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.SnapshottableHashTable"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineHashMap$EntryIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.SnapshottableHashTable$CurrentIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.BaseHashTable"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineHashMap$EntryIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.SnapshottableHashTable$CurrentIterator"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.timeline.TimelineHashMap$TimelineHashMapEntry"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.metadata.FinalizedControllerFeatures"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.raft.internals.KRaftControlRecordStateMachine"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.raft.internals.TreeMapLogHistory"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.raft.internals.LogHistory$Entry"},
{"source": "kafka.server.ControllerApis","target": "org.apache.kafka.server.common.KRaftVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatTracker"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerIdAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatTracker"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationRequestData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.RequestHandlerHelper"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.BrokerRegistrationResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.requests.BrokerRegistrationResponse"},
{"source": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntimeMetricsImpl","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.SendBuilder"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.BrokerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.message.BrokerRegistrationResponseData"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.NodeToControllerQueueItem"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.BrokerLifecycleManager$BrokerRegistrationResponseHandler"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager$BrokerRegistrationResponseEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.clients.ClientResponse"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager$BrokerRegistrationResponseEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ExponentialBackoff"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Listener"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData$Feature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.ControllerRegistrationRequestData"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.ListenerInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController$ControllerWriteEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchMemoryPool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.AbstractRecords"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.ApiMessageAndVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.record.DefaultRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ControllerResultAndOffset"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.deferred.DeferredEventQueue"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.DataOutputStreamWritable"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ByteBufferOutputStream"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.compress.NoCompression"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.DefaultRecordBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchBuilder"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.record.AbstractRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$SimpleTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.KafkaMetricsContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.KafkaMetricsContext"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.RecordsIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.server.common.serialization.AbstractApiMessageSerde"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.metadata.MetadataRecordSerde"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.MetadataRecordType"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashMultiCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerEndpoint"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.RegisterControllerRecord$ControllerFeature"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$HeadElement"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.utils.ImplicitLinkedHashCollection"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.Batch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.LeaderState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.BatchAccumulator$CompletedBatch"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager$CommunicationEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.BrokerLifecycleManager"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.internals.MemoryBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.MemoryBatchReader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.OffsetControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.deferred.DeferredEventQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.SnapshotGenerator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.LogDeltaManifest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetricsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager$MetadataUpdateEvent"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerApis"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetricsChanges"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.internals.MemoryBatchReader"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "com.yammer.metrics.core.Histogram"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.ControllerRegistrationManager$RegistrationResponseHandler"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.requests.ControllerRegistrationResponse"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.ControllerRegistrationManager$RegistrationResponseHandler"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.internals.ClusterResourceListeners"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.MetadataVersionConfigValidator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.BrokerRegistrationTracker"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.MetadataVersionConfigValidator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.MetadataDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.MetadataVersionConfigValidator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.raft.OffsetAndEpoch"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ConfigurationsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.CleanShutdownFileHandler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointReadBuffer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile$Formatter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaRaftServer$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ClassTag$GenericClassTag"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.LowPriorityImplicits"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.TopicPartition"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.RecordVersion"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.LogContext"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointReadBuffer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Gauge"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.LeaderEpochCheckpointFile$Formatter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.LowPriorityImplicits"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogConfig"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LazyIndex$IndexFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.Utils"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.RecordBatchIterator"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.FileLogInputStream"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.AbstractIterator"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogLoader"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.epoch.LeaderEpochFileCache"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.UnifiedLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.log.metrics.BrokerTopicStats"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataReadBuffer"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.Uuid"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadata"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.TopicPartition"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.metrics.FilteringJmxReporter"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.image.MetadataImage"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.image.TopicsImage"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.Uuid"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.image.TopicImage"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.common.Uuid"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricsRegistry"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.reporting.JmxReporter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ClassTag$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.reflect.ManifestFactory$ObjectManifest"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.Array$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleanerManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleanerManager$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleanerManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleanerManager$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleanerManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.COWArrayList"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.RollingCalendar"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.DailyRollingFileAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.FileAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.LogLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.FileAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.FileAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.helpers.QuietWriter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.WriterAppender"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.log4j.Layout"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner$CleanerThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.CleanerConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.Cleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.BufferSupplier"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.SkimpyOffsetMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.utils.Pool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.CollectionConverters$"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.DynamicBrokerConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.LogCleaner$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.DynamicBrokerConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.DynamicConfig$Broker$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.DynamicBrokerConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.server.common.CheckpointFile"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.server.common.CheckpointFile$CheckpointReadBuffer"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.storage.internals.log.LogDirFailureChannel","target": "org.apache.kafka.storage.internals.log.LogDirFailureChannel"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.group.GroupCoordinatorService"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.server.AddPartitionsToTxnManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCache"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.group.GroupCoordinatorConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionCoordinator"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionStateManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.transaction.TransactionLogConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionStateManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.coordinator.transaction.TransactionCoordinator"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.coordinator.transaction.TransactionMarkerChannelManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.group.modern.share.ShareGroupConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicDelta"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.coordinator.transaction.TransactionMarkerChannelManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicIdPartition"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.coordinator.transaction.TxnMarkerQueue"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.LocalReplicaChanges"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "kafka.coordinator.transaction.TransactionMarkerChannelManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.LazyOffsetCheckpoints"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.StateChangeLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.StateChangeLogger$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.StateChangeLogger"},
{"source": "kafka.log.LogCleaner$CleanerThread","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.server.util.ShutdownableThread","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.LocalReplicaChanges$PartitionInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.utils.Pool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.immutable.pcollections.PCollectionsImmutableMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.pcollections.HashPMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicIdPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.StateChangeLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.KafkaController$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.utils.Pool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.Tuple2"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.LocalReplicaChanges$PartitionInfo"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.metadata.PartitionRegistration"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.TopicPartition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.CollectionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.utils.Pool"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.message.LeaderAndIsrRequestData$LeaderAndIsrPartitionState"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.LazyOffsetCheckpoints"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.checkpoint.LazyOffsetCheckpoints$LazyOffsetCheckpointMap"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition$$anon$2"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.OptionConverters$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.jdk.OptionConverters$RichOptional$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "scala.Some"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.AbstractFetcherManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.FailedPartitions"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.AbstractFetcherManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.config.AbstractConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.utils.Utils"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.util.Csv"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.security.auth.SecurityProtocol"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.ClusterImage"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.controller.StateChangeLogger"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.AbstractFetcherManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.purgatory.TopicPartitionOperationKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.share.fetch.DelayedShareFetchPartitionKey"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.HostedPartition$Online"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.cluster.Partition"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.log.metrics.BrokerTopicStats"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.log.metrics.BrokerTopicMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.log.metrics.BrokerTopicMetrics$MeterWrapper"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.log.remote.storage.RemoteStorageMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.MetricName"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.AbstractFetcherManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.log.UnifiedLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.TopicsDelta"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher$"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTaskControlManager$PeriodicTaskOperation"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.PeriodicTask"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.QuorumController"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.server.common.MetadataVersion"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ControllerResult"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.group.GroupCoordinatorService"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.coordinator.common.runtime.CoordinatorRuntime"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.NoOpRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ReplicaManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.KafkaConfig"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.common.metadata.NoOpRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.publisher.BrokerRegistrationTracker"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.CheckpointFileWithFailureHandler"},
{"source": "java.util.concurrent.ThreadPoolExecutor","target": "org.apache.kafka.storage.internals.checkpoint.OffsetCheckpointFile$Formatter"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.common.metadata.NoOpRecord"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.BrokerMetadataPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ReplicationControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.ClusterControlManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.BrokerHeartbeatTracker"},
{"source": "sun.misc.Signal$InternalMiscHandler","target": "org.apache.kafka.common.utils.LoggingSignalHandler$1"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ThreadUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClientDriver"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Timer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Timer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BlockingMessageQueue"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$GracefulShutdown"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$GracefulShutdown"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.ReplicaKey"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet$VoterNode"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.QuorumState"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.VoterSet"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClient$GracefulShutdown"},
{"source": "org.apache.kafka.raft.KafkaRaftClient","target": "org.apache.kafka.raft.KafkaRaftClientDriver"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaRaftClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogDirFailureChannel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment$1"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.KafkaRaftMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.internals.BatchMemoryPool"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.KafkaScheduler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.raft.KafkaNetworkChannel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.checkpoint.PartitionMetadataFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogFileUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.SnapshotFile"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.ProducerStateManager"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageUtil"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.MessageSizeAccumulator"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.log.remote.metadata.storage.generated.ProducerSnapshot"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.types.RawTaggedFieldWriter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.protocol.ByteBufferAccessor"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Crc32C"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Checksums"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteUtils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LocalLog"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegments"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LogSegment"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.LazyIndex$IndexValue"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.OffsetIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.ByteBufferUnmapper"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.AbstractIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TimeIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.record.FileRecords"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.storage.internals.log.TransactionIndex"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.snapshot.FileRawSnapshotReader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.server.util.InterBrokerSendThread"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.LogContext$AbstractKafkaLogger"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.server.util.ShutdownableThread"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.server.ControllerRegistrationManager$ShutdownEvent","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventHandler"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.EventQueue$NoDeadlineFunction"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.queue.KafkaEventQueue$EventContext"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.image.loader.MetadataLoader"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.KRaftMetadataCachePublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.ControllerRegistrationManager"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.queue.KafkaEventQueue"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicConfigPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DynamicClientQuotaPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.ScramPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.DelegationTokenPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetricsPublisher"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "org.apache.kafka.controller.metrics.ControllerMetadataMetrics"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "com.yammer.metrics.core.Meter"},
{"source": "org.apache.kafka.queue.KafkaEventQueue$EventHandler","target": "kafka.server.metadata.AclPublisher"},
{"source": "kafka.network.Acceptor","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector$SelectorMetrics"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.JmxReporter$KafkaMbean"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.MetricName"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.ListenerName"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.Utils"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.PlaintextTransportLayer"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector$SelectorChannelMetadataRegistry"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite$StoredIntGauge"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.ClientInformation"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.Meter"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.Rate"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.SampledStat"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.SampledStat$Sample"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.WindowedSum"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.network.Selector$IdleExpiryManager"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.KafkaChannel"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.Selector"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ChannelState"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.NetworkReceive"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.NetworkClient"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.clients.ApiVersions"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ChannelState$State"},
{"source": "org.apache.kafka.server.util.InterBrokerSendThread","target": "org.apache.kafka.common.network.ChannelState"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.metrics.internals.IntGaugeSuite"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.utils.CoreUtils$","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaYammerMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.Sanitizer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.metrics.KafkaMetricsGroup"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.metrics.RequestChannelMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.metrics.RequestMetrics$ErrorMeter"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.network.metrics.RequestMetrics"},
{"source": "kafka.server.KafkaRequestHandler","target": "org.apache.kafka.server.common.RequestLocal"},
{"source": "kafka.server.KafkaRequestHandler","target": "org.apache.kafka.common.utils.BufferSupplier$DefaultSupplier"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimingWheel"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTask"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskEntry"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.TimerTaskList"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.server.util.timer.SystemTimer"},
{"source": "org.apache.kafka.server.purgatory.DelayedOperationPurgatory","target": "org.apache.kafka.common.utils.KafkaThread"},
{"source": "java.util.concurrent.DelayQueue","target": "org.apache.kafka.server.quota.ThrottledChannel"},
{"source": "java.util.concurrent.DelayQueue","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.Sensor$RecordingLevel"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.utils.SystemTime"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.Sensor$StatAndConfig"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.KafkaMetric"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.stats.CumulativeSum"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.Sensor"},
{"source": "org.apache.kafka.common.metrics.Sensor","target": "org.apache.kafka.common.metrics.MetricConfig"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.apache.kafka.server.quota.ThrottledChannel"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.slf4j.impl.Reload4jLoggerAdapter"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.apache.log4j.Logger"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.apache.log4j.Hierarchy"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.apache.log4j.Category"},
{"source": "org.apache.kafka.server.quota.ThrottledChannel","target": "org.apache.log4j.Priority"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.QuorumController"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.controller.metrics.QuorumControllerMetrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.utils.AppInfoParser"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.Metrics"},
{"source": "kafka.server.KafkaRaftServer","target": "org.apache.kafka.common.metrics.MetricConfig"},
{}
]
}
